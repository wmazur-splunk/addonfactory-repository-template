##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##
name: sync

on:
  push:
    branches: [chore/fossa-all-sync]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
            - 'enforce/**'
            - 'seed/**'
            - 'tools/sync.sh'
            - 'repositories_main.csv'
      - name: Setup
        run: |
          pip3 install git+https://github.com/pixelb/crudini.git
          pip3 install reuse
          pip3 install poetry
          wget -qO /usr/local/bin/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x /usr/local/bin/yq

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.SA_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.SA_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: sync
        if: steps.changes.outputs.src == 'true'
        run: |
          export PR_SUFFIX=-${{ github.ref }}
          mkdir work || true
          echo ${{ secrets.SA_GH_TOKEN_ADMIN }} | gh auth login --with-token
          git config --global user.email ${{ secrets.SA_GH_USER_EMAIL }}
          git config --global user.name ${{ secrets.SA_GH_USER_ADMIN }}
          git config --global commit.gpgsign true
          python3 tools/sync.py tools/sync.sh repositories_main.csv
        env:
          GH_USER_ADMIN: ${{ secrets.SA_GH_USER_ADMIN }}
          GH_TOKEN_ADMIN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          GH_USER_EMAIL: ${{ secrets.SA_GH_USER_EMAIL }}

  branch-protection-rules:
    runs-on: ubuntu-latest
    needs:
      - sync
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'tools/branch_protection_rules.sh'
              - 'repositories_main.csv'
      - name: create-rules
        if: steps.changes.outputs.src == 'true'
        run: |
          echo ${{ secrets.SA_GH_TOKEN_ADMIN }} | gh auth login --with-token
          python3 tools/sync.py tools/branch_protection_rules.sh repositories_main.csv
        env:
          GH_TOKEN_ADMIN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          ADMIN_TEAM_ID: ${{ secrets.ADMIN_TEAM_ID }}

  github-teams:
    runs-on: ubuntu-latest
    needs:
      - sync
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
            - 'repositories_main.csv'
            - 'tools/teams/teams.yaml'
      - name: Setup
        run: pip3 install -r tools/teams/requirements.txt
      - name: Create GitHub teams
        if: steps.changes.outputs.src == 'true'
        run: |
          echo ${{ secrets.SA_GH_TOKEN_ADMIN }} | gh auth login --with-token
          python tools/teams/create_github_teams.py ${{ secrets.SA_GH_TOKEN_ADMIN }} tools/teams/teams.yaml repositories_main.csv
        env:
          ADMIN_TEAM: ${{ secrets.ADMIN_TEAM_NAME }}
