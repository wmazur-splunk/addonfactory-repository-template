##
## SPDX-FileCopyrightText: 2021 Splunk, Inc. <sales@splunk.com>
## SPDX-License-Identifier: LicenseRef-Splunk-1-2020
##
##
name: sync

on:
  push:
    branches: [feature/pen-test]

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
            - 'enforce/**'
            - 'seed/**'
            - 'tools/sync.sh'
            - 'repositories_pentest.csv'
            - '.github/workflows/sync.yaml'
  
      - name: Setup
        run: |
          pip3 install git+https://github.com/pixelb/crudini.git 
          pip3 install reuse
          pip3 install poetry

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.SA_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.SA_GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: sync
        if: steps.changes.outputs.src == 'true'
        run: |
          export PR_SUFFIX=-${{ github.ref }}
          mkdir work || true
          echo ${{ secrets.SA_GH_TOKEN_ADMIN }} | gh auth login --with-token
          git config --global user.email ${{ secrets.SA_GH_USER_EMAIL }}
          git config --global user.name ${{ secrets.SA_GH_USER_ADMIN }}
          git config --global commit.gpgsign true
          python3 tools/sync.py tools/sync.sh repositories_pentest.csv
        env:
          GH_USER_ADMIN: ${{ secrets.SA_GH_USER_ADMIN }}
          GH_TOKEN_ADMIN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          GH_USER_EMAIL: ${{ secrets.SA_GH_USER_EMAIL }}

  branch-protection-rules:
    runs-on: ubuntu-latest
    needs:
      - sync
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'tools/branch_protection_rules.sh'
              - 'repositories_pentest.csv'
              - '.github/workflows/sync.yaml'
      - name: create-rules
        if: steps.changes.outputs.src == 'true'
        run: |
          echo ${{ secrets.SA_GH_TOKEN_ADMIN }} | gh auth login --with-token
          python3 tools/sync.py tools/branch_protection_rules.sh repositories_pentest.csv
        env:
          GH_TOKEN_ADMIN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          ADMIN_TEAM_ID: ${{ secrets.ADMIN_TEAM_ID }}

  secrets:
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - sync
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'repositories_pentest.csv'
              - '.github/workflows/sync.yaml'
      - name: Sync Secrets
        if: steps.changes.outputs.src == 'true'
        uses: google/secrets-sync-action@v1.4.1
        with:
          SECRETS: |
            SNYK_TOKEN
            GH_TOKEN_ADMIN
            GH_USER_ADMIN
            PAT_CLATOOL
            RP_ENDPOINT
            RP_UUID
            SNYK_TOKEN
            VT_API_KEY
            AWS_ACCESS_KEY_ID
            AWS_DEFAULT_REGION
            AWS_SECRET_ACCESS_KEY
            SEMGREP_PUBLISH_TOKEN
          REPOSITORIES: |
            splunk/splunk-dbx-add-on-for-*
            splunk/splunk-add-on-for-*
            splunk/dropbox-add-on-for-splunk
            splunk/google-chrome-add-on-for-splunk
            splunk/dropbox-app-for-splunk
            splunk/seckit_sa_geolocation
            splunk/splunk-configurations-base-indexes
            splunk/splunk-add-on-for-ucc-example
            splunk/splunk-add-on-for-ucc-example-ng
            splunk/addonfactory-ucc-generator
            splunk/addonfactory-ucc-library
            splunk/addonfactory-ta-library-python
            splunk/addonfactory-solutions-library-python
            splunk/addonfactory-splunk-conf-parser-lib
            splunk/addonfactory-cloudconnect-library
            splunk/addonfactory-github-workflows
          GITHUB_TOKEN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          CONCURRENCY: 2
          REPOSITORIES_LIST_REGEX: true
        env:
          GH_TOKEN_ADMIN: ${{secrets.SA_GH_TOKEN_ADMIN}}
          GH_USER_ADMIN: ${{secrets.SA_GH_USER_ADMIN}}
          PAT_CLATOOL: ${{secrets.PAT_CLATOOL}}
          RP_ENDPOINT: ${{secrets.RP_ENDPOINT}}
          RP_UUID: ${{secrets.RP_UUID}}
          SNYK_TOKEN: ${{secrets.SNYK_TOKEN}}
          VT_API_KEY: ${{secrets.VT_API_KEY}}
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_DEFAULT_REGION: ${{secrets.AWS_DEFAULT_REGION}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          SEMGREP_PUBLISH_TOKEN: ${{secrets.SEMGREP_PUBLISH_TOKEN}}

  secrets-pypi:
    runs-on: ubuntu-latest
    needs:
      - secrets
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          persist-credentials: false
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            src:
              - 'repositories_pentest.csv'
              - '.github/workflows/sync.yaml'
      - name: Sync PyPI Secrets
        if: steps.changes.outputs.src == 'true'
        uses: google/secrets-sync-action@v1.4.1
        with:
          SECRETS: |
            PYPI_USERNAME
            PYPI_TOKEN
          REPOSITORIES: |
            splunk/addonfactory-ucc-generator
            splunk/addonfactory-ucc-library
            splunk/addonfactory-ta-library-python
            splunk/addonfactory-solutions-library-python
            splunk/addonfactory-splunk-conf-parser-lib
            splunk/pytest-splunk-addon
            splunk/addon-factory-smartx-ui-test-library
            splunk/addonfactory-cloudconnect-library
          GITHUB_TOKEN: ${{ secrets.SA_GH_TOKEN_ADMIN }}
          CONCURRENCY: 2
          REPOSITORIES_LIST_REGEX: false
        env:
          PYPI_USERNAME: ${{secrets.PYPI_USERNAME}}
          PYPI_TOKEN: ${{secrets.PYPI_TOKEN}}
